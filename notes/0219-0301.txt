02-19



2024-02-19 10:13:39.810429
不进行 reweighted-l1，看结果如何
符合预期，有较好的效果

2024-02-19 10:17:06.894262
将 reweighted-l1 的频率调成 8000，看迭代次数多，会不会更有效
力的稀疏程度还是不够

2024-02-19 10:20:10.285829
在上述基础上加上 fdir_cons=1
效果奇差无比，loss降不了，力也不稀疏

2024-02-19 10:25:14.083280
sample_type=arc
和time采样看起来差不多

2024-02-19 15:50:05.628441
因为发现 reweighted-l1 不适合一开始就直接用，所以在 params.yaml 中加入 update_start，让初始 shadow_loss 能变得更好
稀疏性不如之前的版本，shadow_loss也没有明显优势

2024-02-19 17:12:17.035524
修复采样方式为 arc 时产生的 bug，并直接测试
符合预期，不过不稀疏

2024-02-19 20:18:45.563685
在 mass spring 模型里，增加面弯折的能量，采样方式为 time
没看出明显优势

2024-02-19 20:21:20.299913
与上一个相比，去掉了多光照
结果正常

2024-02-19 21:09:14.046587
对实验数据文件结构作一些精简，然后发现跑得很慢，是我错觉？(后来发现是增加弯折能量导致的）
能量几乎不降低，这很奇怪





02-20



2024-02-20 09:58:26.726881
去掉面弯折能量，再测试
力不稀疏，其他正常

2024-02-20 09:59:46.104767
把 update_start 调成与 update_w_hz 一致，试一下
比前一个稀疏一些，但网格不太光滑

2024-02-20 11:44:29.146837
增加了计算力 1-norm 时的权重，让边界凸点上的力不易变小
目前效果最好的一个，成功保留了凸点上的力，并且稀疏性相对较好，之后可能在此基础上改参数了

2024-02-20 16:12:13.506125
将太阳直射点改为赤道，即 dir_latitude=0
网格很扭曲

2024-02-20 16:13:51.363928
在上述基础上，改： start_moment=11.0, sample_type=arc
有较好的效果

2024-02-20 16:16:58.763921
将多光照下阴影面积矩阵相乘改为取最小值
这个好像中途停止了，没有结果

2024-02-20 16:32:39.045142
发现前两个初始阴影交集为空，于是再把起始时间改为12.0，测试
还好，不算稀疏

2024-02-20 21:45:45.944982
测试 fuji.obj
貌似不太符合物理

2024-02-20 22:21:56.804900
测试 pants.obj
看起来不符合物理

2024-02-20 22:37:37.161773
再次尝试 start_moment=11.0, sample_type=arc，合肥夏至
有一个凸点上的力没保留下来，





02-21



2024-02-21 09:53:34.722966s
在69的基础上重复57
不稀疏，其他尚可

2024-02-21 09:55:51.054682
在97基础上改 sample_type=arc
有朝内的力，不是特别好，shadow_loss 在后期上升

2024-02-21 10:05:58.970971
在以前的版本中，reweighted-l1 时，我对权重进行了变换，使 loss 能平稳过渡，现在我删去这个功能试一下
效果不如97

2024-02-21 10:34:10.654458
恢复105所提变换，并设置 balance_cof=1e-5
看起来还不错，但80000次迭代用了15h

2024-02-21 10:37:40.102970
设置 balance_cof=1e-7
效果更佳，经过23h到了70000多步





02-22
设置 balance_cof=1e-5 进行测试


2024-02-22 10:56:05.208033
测试 frog.obj


2024-02-22 10:56:51.918141
测试 fuji.obj


2024-02-22 10:57:38.781375
测试 owl.obj


2024-02-22 10:58:17.812931
测试 panda.obj


2024-02-22 11:06:28.299696
测试 penguin.obj


2024-02-22 11:07:20.592196
测试 turtle.obj


2024-02-22 11:07:51.746072
测试 peacock.obj


2024-02-22 11:08:20.940365
测试 pants.obj


2024-02-22 18:51:24.504897
测试 frog.obj，设置 balance_cof=1e-7，以下一致


2024-02-22 18:52:16.785102
测试 fuji.obj


2024-02-22 18:53:56.631843
测试 panda.obj


2024-02-22 18:55:32.223285
测试 penguin.obj


2024-02-22 18:56:25.984729
测试 turtle.obj


2024-02-22 18:57:10.952272
测试 peacock.obj


2024-02-22 20:32:34.999364
测试 owl.obj


2024-02-22 20:33:04.246098
测试 pants.obj






02-23
以上两波结果统统都很差，现将阴影值取最小改为相乘，balance_cof=1e-2，看结果如何


2024-02-23 14:38:26.225195
测试 frog.obj


2024-02-23 14:40:21.223169
测试 hex06.obj


2024-02-23 14:41:05.267548
测试 fuji.obj


2024-02-23 14:41:40.150815
测试 panda.obj


2024-02-23 14:42:09.459607
测试 penguin.obj


2024-02-23 14:42:35.510351
测试 turtle.obj


2024-02-23 14:43:01.965515
测试 peacock.obj


2024-02-23 14:43:23.049107
测试 owl.obj






02-24
以上这样改效果更加糟糕，现将 fnorm1_weight由 0.005 改为 0.007


2024-02-24 13:53:21.935825
测试 frog.obj


2024-02-24 13:53:53.156925
测试 hex06.obj


2024-02-24 13:54:20.197319
测试 peacock.obj


2024-02-24 13:54:42.112810
测试 owl.obj


2024-02-24 14:22:41.954248
测试 hex06.obj






02-27
决定指定杆所在位置，改一部分代码分别做实验


2024-02-27 22:41:33.003070
初始化 hex06 的两个点的方向朝上






03-01



2024-03-01 09:54:59.703294
更改代码结构，看测试结果


2024-03-01 10:42:32.444767
增加对杆所在点 z 坐标的约束
